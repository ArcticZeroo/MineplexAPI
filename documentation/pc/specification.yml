swagger: '2.0'
info:
  title: Mineplex
  description: Public API for Mineplex PC
  version: "1.0.0"
host: api.mineplex.com
basePath: /pc
schemes:
  - https
produces:
  - application/json
securityDefinitions:
  apiKey:
    type: apiKey
    name: apiKey
    in: query
paths:
  /player/{player}:
    get:
      summary: Get Player Data
      description: |
        The Products endpoint returns information about the *Uber* products
        offered at a given location. The response includes the display name
        and other details about each product, and lists the products in the
        proper display order.
      parameters:
        - name: player
          in: path
          description: Name or UUID of the player
          required: true
          type: string
          format: uuid or player name
      tags:
        - Player
      security:
      - apiKey: []
      responses:
        200:
          description: An array of products
          schema:
            $ref: '#/definitions/Player'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /player/{player}/status:
    get:
      summary: Get Player Status
      description: |
        The Products endpoint returns information about the *Uber* products
        offered at a given location. The response includes the display name
        and other details about each product, and lists the products in the
        proper display order.
      parameters:
        - name: player
          in: path
          description: Name or UUID of the player
          required: true
          type: string
          format: uuid or player name
      tags:
        - Player
      security:
      - apiKey: []
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PlayerStatus'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /player/{player}/friends:
    get:
      summary: Get Player Friends
      description: |
        The Products endpoint returns information about the *Uber* products
        offered at a given location. The response includes the display name
        and other details about each product, and lists the products in the
        proper display order.
      parameters:
        - name: player
          in: path
          description: Name or UUID of the player
          required: true
          type: string
          format: uuid or player name
      tags:
        - Player
      security:
      - apiKey: []
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/PlayerBase'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /amplifier:
    get:
      summary: Get Amplifiers
      description: |
        Returns a dictionary mapping amplifier groups to an array of Amplifiers.
      tags:
        - Amplifier
      security:
      - apiKey: []
      responses:
        200:
          description: Success
          schema:
            type: object
            additionalProperties:
              type: array
              items:
                $ref: '#/definitions/Amplifier'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /amplifierGroup:
    get:
      summary: Get Amplifier Groups
      description: |
        Returns an array of strings representing all available amplifier groups
      tags:
        - Amplifier
      security:
      - apiKey: []
      responses:
        200:
          description: Success
          schema:
              type: array
              items:
                type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /amplifier/{amplifiergroup}:
    get:
      summary: Get Amplifiers from Amplifier Group
      description: |
        Returns an array of amplifiers for that group
      parameters:
        - name: amplifiergroup
          in: path
          description: Amplifier Group
          required: true
          type: string
      tags:
        - Amplifier
      security:
      - apiKey: []
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Amplifier'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  PlayerBase:
    type: object
    required:
    - name
    - uuid
    properties:
      name:
        type: string
        description: The player's name
      uuid:
        type: string
        description: The player's UUID, including dashes
  Player:
    type: object
    required:
    - rank
    - lastLogin
    - status
    - friends
    allOf:
      - $ref: '#/definitions/PlayerBase'
      - type: object
        properties:
          rank:
            type: string
          lastLogin:
              type: string
              format: date
          status:
              $ref: '#/definitions/PlayerStatus'
          friends:
              type: array
              items:
                $ref: '#/definitions/PlayerBase'
  PlayerStatus:
    type: object
    required:
    - online
    properties:
      online:
        type: boolean
        description: Is the player online right now?
      server:
        type: string
        description: The server the player is connected to. Only present if online is true.
  Amplifier:
    type: object
    required:
      - playerName
      - uuid
      - duration
      - activationTime
      - multiplier
      - startTime
      - endTime
    properties:
      playerName:
        type: string
        description: The player that activated this Amplifier
      uuid:
        type: string
        description: The UUID of the player that activated this Amplifier
      duration:
        type: integer
      activationTime:
        type: string
        format: date-time
      multiplier:
        type: number
      startTime:
        type: string
        format: date-time
      endTime:
        type: string
        format: date-time
  Error:
    type: object
    required:
    - statusCode
    properties:
      statusCode:
        type: integer
        description: HTTP status code sent with this error
      error:
        type: string
        description: Description of the error
